@model TopScoreValidator.Web.Models.WordSearchViewModel

@{
    ViewData["Title"] = "Search";
}

<div class="row justify-content-center">
    <div class="col-md-10">
        <div class="card">
            <div class="card-header">
                <h2 class="text-center">Search</h2>
            </div>
            <div class="card-body">
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success">
                        @TempData["SuccessMessage"]
                    </div>
                }

                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger">
                        @TempData["ErrorMessage"]
                    </div>
                }

                <form asp-action="Index" method="get" class="mb-4">
                    <div class="input-group">
                        <input type="text" name="value" class="form-control" placeholder="Search..." value="@Model.Value" />
                        <div class="input-group-append">
                            <button type="submit" class="btn btn-primary">Search</button>

                            @if (Model.IsSearching)
                            {
                                <a asp-controller="Search" asp-action="Index" asp-route-value="@Model.Value" class="btn btn-outline-secondary"><i class="fas fa-sync-alt"></i> Refresh</a>
                            }
                        </div>
                    </div>
                </form>

                <div class="row mb-4">
                    <div class="col-md-3">
                        <div class="card bg-light">
                            <div class="card-body text-center">
                                <h5>Total Words</h5>
                                <h3>@Model.Metrics.TotalWordCount</h3>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card bg-light">
                            <div class="card-body text-center">
                                <h5>Average Word Length</h5>
                                <h3>@Math.Round(Model.Metrics.AverageWordLength, 1)</h3>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card bg-light">
                            <div class="card-body text-center">
                                <h5>Longest</h5>
                                <h6>@Model.Metrics.LongestWord</h6>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card bg-light">
                            <div class="card-body text-center">
                                <h5>Most Recent</h5>
                                <h6>@Model.Metrics.MostRecentWord</h6>
                            </div>
                        </div>
                    </div>
                </div>

                @if (!(Model.Count > 0))
                {
                    @if (Model.IsSearching && Model.Metrics.TotalWordCount > 0)
                    {
                        <div class="alert alert-info">
                            <h5>No valid word was found, but here are the previously submitted words:</h5>
                            <ul class="list-group list-group-flush mt-2">
                                @if (!string.IsNullOrEmpty(Model.Metrics.MostRecentWord))
                                {
                                    <li class="list-group-item">Most Recent: <strong>@Model.Metrics.MostRecentWord</strong></li>
                                }

                                @if (!string.IsNullOrEmpty(Model.Metrics.LongestWord))
                                {
                                    <li class="list-group-item">Longest: <strong>@Model.Metrics.LongestWord</strong></li>
                                }

                                <li class="list-group-item">Total Words: <strong>@Model.Metrics.TotalWordCount</strong></li>
                            </ul>
                        </div>
                    }
                    else if (Model.IsSearching)
                    {
                        <div class="alert alert-info">No valid word was found.</div>
                    }
                    else
                    {
                        <div class="alert alert-info">Please enter a valid word.</div>
                    }
                }

                @if (Model.Count > 0)
                {
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Word</th>
                                    <th>Submitted</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var word in Model.Words)
                                {
                                    <tr>
                                        <td>@word.Id</td>
                                        <td>@word.Value</td>
                                        <td>@word.CreatedAt.ToString("g")</td>
                                        <td>
                                            <button type="button" class="btn btn-sm btn-danger delete-btn" data-bs-toggle="modal" data-bs-target="#deleteModal" data-toggle="modal" data-target="#deleteModal" data-id="@word.Id" data-word="@word.Value">Delete</button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }

                <div class="text-center mt-3">
                    <a asp-controller="Validation" asp-action="Index" class="btn btn-primary">Back</a>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Delete</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete <strong id="wordToDelete"></strong>?</p>
            </div>
            <div class="modal-footer">
                <form id="deleteForm" asp-controller="Submission" asp-action="Delete" method="post">
                    <input type="hidden" id="deleteWordId" name="id" value="" />@Html.AntiForgeryToken()
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.delete-btn').on('click', function () {
                var wordId = $(this).data('id');

                var wordValue = $(this).data('word');

                $('#deleteWordId').val(wordId);

                $('#wordToDelete').text(wordValue);
            });

            $('#deleteModal').on('hide.bs.modal', function () {
                $('.modal-backdrop').remove();

                $('body').removeClass('modal-open');

                $('body').css('padding-right', '');
            });
        });
    </script>
}
